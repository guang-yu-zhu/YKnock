[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guangyu Zhu. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhu G (2023). YKnock: YKnock Filter Controlled Response Selection. R package version 1.0.0, https://www.biorxiv.org/content/10.1101/2021.10.18.464822v1.","code":"@Manual{,   title = {YKnock: The YKnock Filter for Controlled Response Selection},   author = {Guangyu Zhu},   year = {2023},   note = {R package version 1.0.0},   url = {https://www.biorxiv.org/content/10.1101/2021.10.18.464822v1}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The YKnock Filter for Controlled Response Selection","text":"","code":"devtools::install_github('guang-yu-zhu/Yknock')"},{"path":"/index.html","id":"package","dir":"","previous_headings":"","what":"Package","title":"The YKnock Filter for Controlled Response Selection","text":"R package perform Controlled Response Variable Selection. Large-scale multiple perturbation experiments potential reveal detailed understanding molecular pathways respond genetic environmental changes. key question studies gene expression changes important response perturbation. problem challenging functional form nonlinear relationship gene expression perturbation unknown, identification important genes high-dimensional variable selection problem. deal challenges, present method based model-X knockoffs framework Deep Neural Networks (DNNs) identify significant gene expression changes multiple perturbation experiments. approach makes assumptions functional form dependence responses perturbations enjoys finite sample false discovery rate control selected set important gene expression responses. apply approach Library Integrated Network-Based Cellular Signature (LINCS) data sets NIH Common Fund program catalogs human cells globally respond chemical, genetic disease perturbations. identified important genes whose expression directly modulated response perturbation anthracycline, vorinostat, trichostatin-, geldanamycin, sirolimus. compare set important genes respond small molecules identify co-responsive pathways. Identification genes respond specific perturbation stressors can provide better understanding underlying mechanisms disease advance identification new drug targets.","code":""},{"path":"/reference/YKnock_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"The YKnock Filter — YKnock_filter","title":"The YKnock Filter — YKnock_filter","text":"function runs model-Y Knockoffs procedure start finish, selecting important responses.","code":""},{"path":"/reference/YKnock_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The YKnock Filter — YKnock_filter","text":"","code":"YKnock_filter(   X,   Y,   knockoffs = create_YKnock,   statistic = stat_modelY_coef,   fdr = 0.1,   offset = 1 )"},{"path":"/reference/YKnock_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The YKnock Filter — YKnock_filter","text":"X n--p matrix data frame predictors. Y n--r matrix data frame responses. knockoffs method used construct knockoffs \\(Y\\) variables. must function taking n--r matrix input returning n--r matrix knockoff variables. default, approximate model-Y Gaussian knockoffs used. statistic statistics used assess variable importance. default, lasso statistic cross-validation used. See Details section information. fdr target false discovery rate (default: 0.1). offset either 0 1 (default: 1). offset used compute rejection threshold statistics. value 1 yields slightly conservative procedure (\"knockoffs+\") controls false discovery rate (FDR) according usual definition, offset 0 controls modified FDR.","code":""},{"path":"/reference/YKnock_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The YKnock Filter — YKnock_filter","text":"object class \"YKnock\". object list  containing least following components: Y matrix original responses Yk matrix knockoff responses statistic computed test statistics threshold computed selection threshold selected named vector selected responses","code":""},{"path":"/reference/YKnock_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The YKnock Filter — YKnock_filter","text":"function creates knockoffs, computes importance statistics, selects responses. main entry point YKnock package. parameter knockoffs controls knockoff variables created. default, model-Y scenario assumed multivariate normal distribution fitted original variables \\(Y\\). default importance statistic stat_modelY_coef. possible provide custom functions knockoff constructions importance statistics. examples can found vignette.","code":""},{"path":"/reference/YKnock_filter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The YKnock Filter — YKnock_filter","text":"Identification Significant Gene Expression Changes Multiple Perturbation Experiments using Knockoffs Tingting Zhao, Guangyu Zhu, Patrick Flaherty bioRxiv 2021.10.18.464822; https://www.biorxiv.org/content/10.1101/2021.10.18.464822v1","code":""},{"path":"/reference/YKnock_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The YKnock Filter — YKnock_filter","text":"","code":"r = 100; p = 10; n = 40 m = 10  # num of important response rho = 0.2 betaValue = 1 SigmaX=matrix(rho,p,p) diag(SigmaX)=1 betaA=matrix(sample(c(-1,1)*betaValue,size=m*p, replace = TRUE), nrow = m,ncol = p) beta=matrix(0,r,p) beta[1:m,]=betaA sigma=1 X = matrix(rnorm(n*p),n)%*%chol(SigmaX) Y = X %*% t(beta) + sqrt(sigma)*matrix(rnorm(n*r),n,r) set.seed(1) result=YKnock_filter(X, Y) print(result$selected) #>  [1]  1  2  3  4  5  6  7  8  9 10 88"},{"path":"/reference/create.solve_asdp.html","id":null,"dir":"Reference","previous_headings":"","what":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","title":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","text":"function solves optimization problem needed create fixed-X Gaussian SDP knockoffs block-diagonal approximation covariance matrix. less powerful create.solve_sdp, computationally efficient.","code":""},{"path":"/reference/create.solve_asdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","text":"","code":"create.solve_asdp(   Sigma,   max.size = 500,   gaptol = 1e-06,   maxit = 1000,   verbose = FALSE )"},{"path":"/reference/create.solve_asdp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","text":"Sigma positive-definite p--p covariance matrix. max.size size largest block block-diagonal approximation Sigma (default: 500). See Details. gaptol tolerance duality gap fraction value objective functions (default: 1e-6). maxit maximum number iterations solver (default: 1000). verbose whether display progress (default: FALSE).","code":""},{"path":"/reference/create.solve_asdp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","text":"solution \\(s\\) semidefinite program defined .","code":""},{"path":"/reference/create.solve_asdp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relaxed optimization for fixed-X and Gaussian knockoffs — create.solve_asdp","text":"Solves following two-step semidefinite program: (step 1)  $$ \\mathrm{maximize}     \\; \\mathrm{sum}(s) \\quad                    \\mathrm{subject} \\; \\mathrm{:}  \\; 0 \\leq s \\leq 1, \\;                                          2 \\Sigma_{\\mathrm{approx}} - \\mathrm{diag}(s) \\geq 0$$ (step 2) $$ \\mathrm{maximize}      \\; \\gamma \\quad                   \\mathrm{subject} \\; \\mathrm{:}    \\; \\mathrm{diag}(\\gamma s) \\leq 2 \\Sigma$$ smaller SDP solved using interior-point method implemented dsdp. parameter max.size controls size largest semidefinite program needs solved. larger value max.size increase computation cost, yielding solution closer original semidefinite program. matrix Sigma supplied user non-scaled covariance matrix  (.e. diagonal entries equal 1), appropriate scaling applied solving SDP defined . result scaled back returned, match  original scaling covariance matrix supplied user.","code":""},{"path":[]},{"path":"/reference/create.solve_equi.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","title":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","text":"function solves simple optimization problem needed create fixed-X  Gaussian SDP knockoffs full covariance matrix. may significantly less powerful create.solve_sdp.","code":""},{"path":"/reference/create.solve_equi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","text":"","code":"create.solve_equi(Sigma)"},{"path":"/reference/create.solve_equi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","text":"Sigma positive-definite p--p covariance matrix.","code":""},{"path":"/reference/create.solve_equi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","text":"solution \\(s\\) optimization problem defined .","code":""},{"path":"/reference/create.solve_equi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization for equi-correlated fixed-X and Gaussian knockoffs — create.solve_equi","text":"Computes closed-form solution semidefinite programming problem:  $$ \\mathrm{maximize}  \\; s \\quad        \\mathrm{subject} \\; \\mathrm{:}   \\; 0 \\leq s \\leq 1, \\;        2\\Sigma - sI \\geq 0 $$ used generate equi-correlated knockoffs. closed form-solution problem \\(s = 2\\lambda_{\\mathrm{min}}(\\Sigma) \\land 1\\).","code":""},{"path":[]},{"path":"/reference/create.solve_sdp.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","title":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","text":"function solves optimization problem needed create fixed-X Gaussian SDP knockoffs full covariance matrix. powerful create.solve_asdp, computationally expensive.","code":""},{"path":"/reference/create.solve_sdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","text":"","code":"create.solve_sdp(Sigma, gaptol = 1e-06, maxit = 1000, verbose = FALSE)"},{"path":"/reference/create.solve_sdp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","text":"Sigma positive-definite p--p covariance matrix. gaptol tolerance duality gap fraction value objective functions (default: 1e-6). maxit maximum number iterations solver (default: 1000). verbose whether display progress (default: FALSE).","code":""},{"path":"/reference/create.solve_sdp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","text":"solution \\(s\\) semidefinite programming problem defined .","code":""},{"path":"/reference/create.solve_sdp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimization for fixed-X and Gaussian knockoffs — create.solve_sdp","text":"Solves semidefinite programming problem: $$ \\mathrm{maximize}      \\; \\mathrm{sum}(s) \\quad           \\mathrm{subject} \\; \\mathrm{}    0 \\leq s \\leq 1, \\;                                  2\\Sigma - \\mathrm{diag}(s) \\geq 0$$ problem solved using interior-point method implemented dsdp. matrix Sigma supplied user non-scaled covariance matrix  (.e. diagonal entries equal 1), appropriate scaling applied solving SDP defined . result scaled back returned, match  original scaling covariance matrix supplied user.","code":""},{"path":[]},{"path":"/reference/create_YKnock.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-order Gaussian knockoffs — create_YKnock","title":"Second-order Gaussian knockoffs — create_YKnock","text":"function samples second-order multivariate Gaussian knockoff variables. First, multivariate Gaussian distribution fitted observations Y. , Gaussian knockoffs generated according estimated model.","code":""},{"path":"/reference/create_YKnock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-order Gaussian knockoffs — create_YKnock","text":"","code":"create_YKnock(Y, method = c(\"asdp\", \"equi\", \"sdp\"), shrink = F)"},{"path":"/reference/create_YKnock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-order Gaussian knockoffs — create_YKnock","text":"Y n--p matrix original responses. method either \"equi\", \"sdp\" \"asdp\" (default: \"asdp\"). determines method used minimize correlation original variables knockoffs. shrink whether shrink estimated covariance matrix (default: F).","code":""},{"path":"/reference/create_YKnock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-order Gaussian knockoffs — create_YKnock","text":"n--r matrix knockoff variables.","code":""},{"path":"/reference/create_YKnock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-order Gaussian knockoffs — create_YKnock","text":"argument shrink set T, James-Stein-type shrinkage estimator covariance matrix used instead traditional maximum-likelihood estimate. option requires package corpcor. See cov.shrink details. Even argument shrink set F, case estimated covariance matrix positive-definite, function apply shrinkage.","code":""},{"path":"/reference/create_YKnock.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Second-order Gaussian knockoffs — create_YKnock","text":"Candes et al., Panning Gold: Model-free Knockoffs High-dimensional Controlled Variable Selection,   arXiv:1610.02351 (2016).   https://web.stanford.edu/group/candes/knockoffs/index.html","code":""},{"path":"/reference/divide.sdp.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate a covariance matrix by a block diagonal matrix with blocks\nof approximately equal size using Ward's method for hierarchical clustering — divide.sdp","title":"Approximate a covariance matrix by a block diagonal matrix with blocks\nof approximately equal size using Ward's method for hierarchical clustering — divide.sdp","text":"Approximate covariance matrix block diagonal matrix blocks approximately equal size using Ward's method hierarchical clustering","code":""},{"path":"/reference/divide.sdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate a covariance matrix by a block diagonal matrix with blocks\nof approximately equal size using Ward's method for hierarchical clustering — divide.sdp","text":"","code":"divide.sdp(Sigma, max.size)"},{"path":"/reference/knockoff.threshold.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold for the knockoff filter — knockoff.threshold","title":"Threshold for the knockoff filter — knockoff.threshold","text":"Computes threshold knockoff filter.","code":""},{"path":"/reference/knockoff.threshold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold for the knockoff filter — knockoff.threshold","text":"","code":"knockoff.threshold(W, fdr = 0.1, offset = 1)"},{"path":"/reference/knockoff.threshold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold for the knockoff filter — knockoff.threshold","text":"W test statistics fdr target false discovery rate (default: 0.1) offset either 0 1 (default: 1). offset used compute rejection threshold statistics. value 1 yields slightly conservative procedure (\"knockoffs+\") controls FDR according usual definition, offset 0 controls modified FDR.","code":""},{"path":"/reference/knockoff.threshold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold for the knockoff filter — knockoff.threshold","text":"threshold variable selection.","code":""},{"path":"/reference/merge.clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge consecutive clusters of correlated variables while ensuring \nthat no cluster has size larger than max.size — merge.clusters","title":"Merge consecutive clusters of correlated variables while ensuring \nthat no cluster has size larger than max.size — merge.clusters","text":"Merge consecutive clusters correlated variables ensuring  cluster size larger max.size","code":""},{"path":"/reference/merge.clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge consecutive clusters of correlated variables while ensuring \nthat no cluster has size larger than max.size — merge.clusters","text":"","code":"# S3 method for clusters merge(clusters, max.size)"},{"path":"/reference/stat.modelY_classification_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Importance statistics based on a GLM — stat_modelY_classification_coef","title":"Importance statistics based on a GLM — stat_modelY_classification_coef","text":"Computes signed maximum statistic   $$W_j = \\max(Z_j, \\tilde{Z}_j) \\cdot \\mathrm{sgn}(Z_j - \\tilde{Z}_j),$$ \\(Z_j\\) \\(\\tilde{Z}_j\\) maximum values \\(\\lambda\\) jth variable knockoff, respectively, enter generalized linear model.","code":""},{"path":"/reference/stat.modelY_classification_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Importance statistics based on a GLM — stat_modelY_classification_coef","text":"","code":"stat_modelY_classification_coef(X, Y, Yk, nlambda = 100, standardize = TRUE)"},{"path":"/reference/stat.modelY_classification_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Importance statistics based on a GLM — stat_modelY_classification_coef","text":"X n--p matrix qualitative predictors. Y n--r matrix original responses. Yk n--r matrix knockoff responses. nlambda number lambda values - default 100. standardize Logical flag Y variable standardization. Default standardize=TRUE.","code":""},{"path":"/reference/stat.modelY_classification_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Importance statistics based on a GLM — stat_modelY_classification_coef","text":"r--2 matrix statistics \\(Z\\).","code":""},{"path":"/reference/stat.modelY_classification_coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Importance statistics based on a GLM — stat_modelY_classification_coef","text":"function uses glmnet package fit generalized linear model via penalized maximum likelihood. statistics \\(W_j\\) constructed taking difference coefficient j-th responses knockoff. ' optional nlambda parameter can used control granularity grid \\(\\lambda\\)'s. default value nlambda 100.","code":""},{"path":"/reference/stat.modelY_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Importance statistics based on a GLM with cross-validation — stat_modelY_coef","title":"Importance statistics based on a GLM with cross-validation — stat_modelY_coef","text":"Fits generalized linear model via penalized maximum likelihood cross-validation. , compute difference statistic   $$W_j = |Z_j| - |\\tilde{Z}_j|$$ \\(Z_j\\) \\(\\tilde{Z}_j\\) coefficient estimates jth variable knockoff, respectively. value regularization parameter \\(\\lambda\\) selected cross-validation computed glmnet.","code":""},{"path":"/reference/stat.modelY_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Importance statistics based on a GLM with cross-validation — stat_modelY_coef","text":"","code":"stat_modelY_coef(X, Y, Yk, generate_lambda = TRUE, nlambda = 100, nfolds = 5)"},{"path":"/reference/stat.modelY_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Importance statistics based on a GLM with cross-validation — stat_modelY_coef","text":"X n--p matrix quantitative predictors. Y n--r matrix original responses. Yk n--r matrix knockoff responses. generate_lambda whether use method YKnock paper generate lambda sequence. , use method glmnet package generate lambda. nlambda number lambda values - default 100. nfolds number folds - default 5.","code":""},{"path":"/reference/stat.modelY_coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Importance statistics based on a GLM with cross-validation — stat_modelY_coef","text":"function uses glmnet package fit generalized linear model via penalized maximum likelihood. statistics \\(W_j\\) constructed taking difference coefficient j-th responses knockoff. default, value regularization parameter chosen 5-fold cross-validation. optional nlambda parameter can used control granularity grid \\(\\lambda\\)'s. default value nlambda 100.","code":""},{"path":"/reference/stat_modelY_maxlam.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM statistics for knockoff — stat_modelY_maxlam","title":"GLM statistics for knockoff — stat_modelY_maxlam","text":"Computes signed maximum statistic   $$W_j = \\max(Z_j, \\tilde{Z}_j) \\cdot \\mathrm{sgn}(Z_j - \\tilde{Z}_j),$$ \\(Z_j\\) \\(\\tilde{Z}_j\\) maximum values \\(\\lambda\\) jth variable knockoff, respectively, enter generalized linear model.","code":""},{"path":"/reference/stat_modelY_maxlam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLM statistics for knockoff — stat_modelY_maxlam","text":"","code":"stat_modelY_maxlam(   X,   Y,   Yk,   generate_lambda = TRUE,   nlambda = 100,   standardize = TRUE )"},{"path":"/reference/stat_modelY_maxlam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GLM statistics for knockoff — stat_modelY_maxlam","text":"X n--p matrix quantitative predictors. Y n--r matrix original responses. Yk n--r matrix knockoff responses. generate_lambda whether use method YKnock paper generate lambda sequence. , use method glmnet package generate lambda. nlambda number lambda values - default 100. standardize Logical flag Y variable standardization. Default standardize=TRUE.","code":""},{"path":"/reference/stat_modelY_maxlam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GLM statistics for knockoff — stat_modelY_maxlam","text":"r--2 matrix statistics \\(Z\\).","code":""},{"path":"/reference/stat_modelY_maxlam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GLM statistics for knockoff — stat_modelY_maxlam","text":"function uses glmnet compute regularization path fine grid \\(\\lambda\\)'s.","code":""},{"path":"/reference/vectorize_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorize a matrix into the SCS format — create.vectorize_matrix","title":"Vectorize a matrix into the SCS format — create.vectorize_matrix","text":"Vectorize matrix SCS format","code":""},{"path":"/reference/vectorize_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorize a matrix into the SCS format — create.vectorize_matrix","text":"","code":"create.vectorize_matrix(M)"},{"path":"/news/index.html","id":"yknock-100","dir":"Changelog","previous_headings":"","what":"YKnock 1.0.0","title":"YKnock 1.0.0","text":"first version YKnock package released open-source GitHub.","code":""}]
